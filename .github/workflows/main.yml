name: Edge Multi Portable Auto Builder

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: choco install jq -y

      - name: Fetch data.json
        shell: bash
        run: |
          curl -sL https://raw.githubusercontent.com/bibicadotnet/edge_installer_multi/main/data.json -o data.json

      - name: Get Chrome++ version
        id: chromeplus
        shell: bash
        run: |
          ver=$(curl -s https://api.github.com/repos/Bush2021/chrome_plus/releases/latest | jq -r '.tag_name')
          echo "version=$ver" >> $GITHUB_OUTPUT

      - name: Build multi portable
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $channels = @("stable", "beta", "dev", "canary")
          $archs = @("x86", "x64", "ARM64")
          $data = Get-Content data.json | ConvertFrom-Json
          $chromePlusVersion = "${{ steps.chromeplus.outputs.version }}"

          foreach ($channel in $channels) {
            $verKey = "msedge-$channel-win-x64"
            $version = $data.$verKey.version
            if (-not $version -or $version -eq "null") {
              continue
            }

            $tag = "$channel-portable-$version"

            try {
              gh release view $tag --repo ${{ github.repository }} --json tagName > $null
              continue
            } catch {}

            $files = @()

            foreach ($arch in $archs) {
              $key = "msedge-$channel-win-$arch"
              $url = $data.$key.'下载链接'
              if (-not $url -or $url -eq "null") {
                continue
              }

              $tempDir = "$env:TEMP\edge_build_${channel}_${arch}"
              Remove-Item $tempDir -Recurse -Force -ErrorAction SilentlyContinue
              New-Item -ItemType Directory -Path $tempDir | Out-Null

              $zipName = "edge-$channel-$arch-$version.zip"
              Invoke-WebRequest -Uri $url -OutFile "$tempDir\$zipName"

              Invoke-WebRequest -Uri "https://github.com/Bush2021/chrome_plus/releases/latest/download/setdll.7z" -OutFile "$tempDir\setdll.7z"
              Invoke-WebRequest -Uri "https://www.7-zip.org/a/7zr.exe" -OutFile "$tempDir\7zr.exe"
              Invoke-WebRequest -Uri "https://raw.githubusercontent.com/bibicadotnet/microsoft-edge-portable/main/chrome%2B%2B.ini" -OutFile "$tempDir\chrome++.ini"

              & "$tempDir\7zr.exe" x "$tempDir\$zipName" "-o$tempDir\edge" -y | Out-Null
              & "$tempDir\7zr.exe" x "$tempDir\setdll.7z" "-o$tempDir\chromeplus" -y | Out-Null

              Copy-Item "$tempDir\chrome++.ini" "$tempDir\edge\chrome++.ini" -Force
              Copy-Item "$tempDir\chromeplus\setdll-x64.exe" "$tempDir\edge\setdll-x64.exe" -Force
              Copy-Item "$tempDir\chromeplus\version-x64.dll" "$tempDir\edge\version.dll" -Force

              Push-Location "$tempDir\edge"
              .\setdll-x64.exe /d:version.dll msedge.exe | Out-Null
              Pop-Location

              $portableZip = "edge-$channel-portable-$arch-$version.zip"
              Compress-Archive -Path "$tempDir\edge\*" -DestinationPath $portableZip -Force
              $files += $portableZip
            }

            if ($files.Count -gt 0) {
              gh release create $tag $files --title "$tag" --notes "Auto portable build for $channel $version with Chrome++ $chromePlusVersion"
            }
          }
