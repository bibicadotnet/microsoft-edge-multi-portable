name: Update Index Page

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  update-index:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update index.html
      shell: powershell
      run: |
        $releases = Invoke-RestMethod -Uri "https://api.github.com/repos/bibicadotnet/microsoft-edge-multi-portable/releases" -Headers @{"User-Agent" = "GitHub-Actions"}
        
        $channels = @("stable", "beta", "dev", "canary")
        $displayNames = @{"stable" = "Microsoft Edge Stable"; "beta" = "Microsoft Edge Beta"; "dev" = "Microsoft Edge Developer"; "canary" = "Microsoft Edge Canary"}
        
        $html = ""
        foreach ($channel in $channels) {
            $channelReleases = $releases | Where-Object { $_.tag_name -like "*edge-$channel-portable*" } | Sort-Object published_at -Descending
            
            if ($channelReleases.Count -gt 0) {
                $latest = $channelReleases[0]
                $versionMatch = $latest.tag_name -match "x64_([0-9.]+)_"
                $version = if ($versionMatch) { $matches[1] } else { "Unknown" }
                $zipAsset = $latest.assets | Where-Object { $_.name -like "*.zip" }
                
                if ($zipAsset) {
                    $html += "                    <li class=`"version-item`">`n"
                    $html += "                        <div>`n"
                    $html += "                            <div class=`"version-name`">$($displayNames[$channel])</div>`n"
                    $html += "                            <a href=`"$($zipAsset.browser_download_url)`" class=`"download-link`" target=`"_blank`">Download ZIP</a>`n"
                    $html += "                        </div>`n"
                    $html += "                        <div class=`"version-number`">$version</div>`n"
                    $html += "                    </li>`n"
                }
            }
        }
        
        $content = Get-Content "index.html" -Raw -Encoding UTF8
        $startMarker = "<!-- AUTO_UPDATE_START -->"
        $endMarker = "<!-- AUTO_UPDATE_END -->"
        
        $startPos = $content.IndexOf($startMarker) + $startMarker.Length
        $endPos = $content.IndexOf($endMarker)
        
        $newContent = $content.Substring(0, $startPos) + "`n" + $html + "                    " + $content.Substring($endPos)
        
        $timeMarker1 = "<!-- AUTO_UPDATE_TIME_START -->"
        $timeMarker2 = "<!-- AUTO_UPDATE_TIME_END -->"
        $timePos1 = $newContent.IndexOf($timeMarker1) + $timeMarker1.Length
        $timePos2 = $newContent.IndexOf($timeMarker2)
        
        if ($timePos1 -gt $timeMarker1.Length -and $timePos2 -gt 0) {
            $currentTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss UTC"
            $newContent = $newContent.Substring(0, $timePos1) + "`n            Last updated: $currentTime`n            " + $newContent.Substring($timePos2)
        }
        
        Set-Content "index.html" -Value $newContent -Encoding UTF8 -NoNewline
        Write-Host "Updated index.html"

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add index.html
        git diff --staged --quiet || git commit -m "Update index page - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss UTC')"
        git push
      shell: powershell
